"use strict";var production=!1===document.getElementById("appjs").dataset.mode,device=deviceCheck(),md=new MobileDetect(window.navigator.userAgent);function findGetParameter(o){var n,t=null;return location.search.substr(1).split("&").forEach(function(e){(n=e.split("="))[0]===o&&(t=decodeURIComponent(n[1]))}),t}function checkCookie(o){var n,t=null;return document.cookie.split(";").forEach(function(e){" "==e.charAt(0)&&(e=e.substring(1)),(n=e.split("="))[0]===o&&(t=n[1])}),t}function deviceCheck(){var e={},o=new MobileDetect(window.navigator.userAgent);return o.match(/android/i)?(e.os="android",e.version=o.version("android")):o.match(/(iphone|ipad|ipod);?/i)?(e.os="ios",e.version=o.version("iOS")):(e.os="pc",e.version=o.version("Chrome")),e}Vue.config.devtools=!production,Vue.config.debug=!production,Vue.config.silent=production,document.addEventListener("DOMContentLoaded",function(){console.log("v1.01"),console.log(device)}),Vue.mixin({data:function(){return{projApi:null,errorMsg:"",envMode:production?"Started":"Testing",loading:!1}},computed:{},watch:{errorMsg:function(){document.querySelector("body").classList.toggle("_freeze")}},methods:{gaEvant:function(e){dataLayer.push({event:e}),console.log("ga:",e)},setCookie:function(e,o,n){var t=new Date;t.setTime(t.getTime()+1e3*n);var r="expires="+t.toUTCString();document.cookie=e+"="+o+";"+r+";"},logger:function(e,o,n){production&&_LTracker.push({level:["ERROR","DEBUG","WARNING","INFO","ALL"][e],content:JSON.stringify(o),path:window.location.href,tag:n||null,device:device,timestamp:Date.now()})},checkOnline:function(){navigator.onLine||alert("Internet 連線已斷開，請確認您的網路狀態。")},scrollTo:function(e){var o=document.scrollingElement||document.documentElement,n=document.querySelector(e),t=o,r=Math.abs(n.offsetTop-t.scrollTop),i=0;!function e(){Math.easeInOutQuad=function(e,o,n,t){return(e/=t/2)<1?n/2*e*e+o:-n/2*(--e*(e-2)-1)+o},i+=50;var o=Math.easeInOutQuad(i,t,r,1500);if(t.scrollTop>n.offsetTop){if(t.scrollTop-=parseInt(o),t.scrollTop<=n.offsetTop)return void(t.scrollTop=n.offsetTop)}else t.scrollTop=parseInt(o);i<1500&&requestAnimationFrame(e)}()},grecaptcha:function(o){function e(e){return o.apply(this,arguments)}return e.toString=function(){return o.toString()},e}(function(n){var t=this;return new Promise(function(o,e){grecaptcha.execute("6LfUo7MUAAAAAJQAML08ruhPeYZvihLYaVvtuYrJ",{action:n}).then(function(e){t.reCaptcha=e,o()},function(){alert("Google驗證失敗，請再次嘗試\n如無法排除此問題，建議重新整理此頁面"),e()})})}),aLink:function(){for(var e=document.querySelectorAll("a"),o=0;o<e.length;o++)e[o].setAttribute("rel","noreferrer noopener")}},mounted:function(){this.projApi=new ProjectApi(89,"cXr7L3Pqo-GF-OcL7U3m8A==")}});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
