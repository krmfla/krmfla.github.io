{"version":3,"sources":["api.js"],"names":["ProjectApi","tokenId","webtoken","_classCallCheck","this","baseReq","info","jwt","date","getElementById","dataset","site","_createClass","key","value","axios","create","friendo_url","init","dataType","_this","interceptors","request","use","data","baseURL","headers","console","error","err","Promise","reject","response","res","concat","then","_this2","token","startDate","endDate","status","projectStatus","checkPorject","_this3","header","url","_this4","post","resolve"],"mappings":"sjCAEMA,WAAU,WACZ,SAAAA,EAAYC,EAASC,GAAUC,gBAAAC,KAAAJ,CAAA,EAC3BI,KAAKC,QACLD,KAAKE,KACLF,KAAKG,IACLH,KAAKI,KALPR,KAAAA,QAAUC,EACZG,KAAAJ,SAAYC,EAAmBE,KAAAA,YAAAH,SAAAS,eAAA,OAAA,EAAAC,QAAAC,KACvBP,KAACC,KAAO,CACZ,CA+EH,OA/EGO,aAAAZ,EAAA,CAAA,CAAAa,IAAA,OAAAC,MACA,WAAKP,IAAAA,EAAAA,KACDH,KAAKC,QAAAU,MAAAC,OAAA,CACJf,QAAUA,KAAOgB,YACjBf,QAAWA,CACXe,eAAuBR,kBACvBS,EACTC,SAAA,OAACP,KAAAZ,EAAA,CAAA,EACMI,KAAAgB,QAAAC,aAAAC,QAAAC,IAAA,SAAAC,GAECC,OADCpB,EAAAA,QAAWU,cAAa,UAAAK,EAAAb,IAChBiB,CACTE,EAAAA,SAAAA,GAEC,OADGC,QAAAC,MAAgBC,CAAA,EACnBC,QAAAC,OAAAF,CAAA,CACDV,CAAAA,EAEFf,KAAAC,QAAAgB,aAAAW,SAAAT,IAAA,SAAAU,GAEG5B,OAAQgB,EAAAA,IACTG,EAAAA,SAAAA,GAED,OADCG,QAAWC,MAAA,aAAAC,CAAA,EACZA,QAAOE,OAAAF,CAAA,CACNF,CAAAA,CAUR,CAAC,EAAA,CAAAd,IAAA,QAAAC,MAED,WARST,IAAAA,EAAAA,KACD,OAAO4B,MAAIT,IAAI,GAAAU,OAAA9B,KAAAa,YAAA,QAAA,EAAAiB,OAAA9B,KAAAH,OAAA,EAAA,CAChByB,QAAAG,CACSD,SAAMxB,KAAAF,QACd,EACFiB,SAAA,MACN,CAAA,EAACgB,KAAA,SAAAF,GAMQ,OANRG,EAAA7B,IAAA0B,EAAAT,KAAAa,MAEDD,EAAA9B,KAAA+B,CAAQC,UAAAL,EAAAT,KAAAc,UACGvB,QAASmB,EAAAA,KAAIK,QACTC,OAAEP,EAAAT,KAAAiB,aACL,EACHL,EAAAM,aAAA,CACDvB,CAAAA,CAWR,CAAC,EAAA,CAAAN,IAAA,MAAAC,MACD,SATQsB,EAAAA,GAAWH,IAAAA,EAAAA,KACXG,OAAK9B,KAAI+B,MAAG,EAAAF,KAAA,WACRG,OAASK,EAAKtC,QAAMiC,IAAAA,EAASM,CAAA,CAUrC,CAAC,CACL,CAAC,EAAA,CAAA/B,IAAA,OAAAC,MAED,SATO+B,EAAArB,EAAOY,GAAKM,IAAAA,EAAAA,KACb,OAAAtC,KAAAiC,MAAA,EAAAF,KAAA,WACN,OAAAW,EAAAzC,QAAA0C,KAAAF,EAAArB,EAAAoB,CAAA,CAAC,CAAA,CAAA/B,CAAAA,EAAAA,CAAAA,IAAAA,eAAAA,MAaD,WAVQ,OAAO8B,KAAIrC,KAACD,QACd,KAAA,EACL,KAAA,EAED,OAAA0C,QAAUvB,OAAMoB,EACZ,KAAW,EAET,OADSE,MAAKzC,OAAO,EACrByB,QAAAC,OAAA,EACL,QAAA,OAAAD,QAAAkB,QAAA,CAAAlC,CAkBD,CAAC,EAAA,EAAAd,CAAA,EAAA","file":"api.js","sourcesContent":["\r\n\r\nclass ProjectApi {\r\n    constructor(tokenId, webtoken) {\r\n        this.baseReq;\r\n        this.info;\r\n        this.jwt;\r\n        this.date;\r\n        this.tokenId = tokenId;\r\n        this.webtoken = webtoken;\r\n        this.friendo_url = document.getElementById(\"appjs\").dataset.site;\r\n        this.init();\r\n    }\r\n    init() {\r\n        this.baseReq =  axios.create({\r\n            baseURL: this.friendo_url,\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            dataType: 'json',\r\n            data: {}\r\n        });\r\n\r\n        this.baseReq.interceptors.request.use(data => {\r\n            data.headers.Authorization = 'Bearer ' + this.jwt\r\n            return data;\r\n        }, err => {\r\n            console.error(err)\r\n            return Promise.reject(err)\r\n        });\r\n        \r\n        this.baseReq.interceptors.response.use( res => {\r\n            return res.data;\r\n        }, err => {\r\n            console.error('res Error:', err)\r\n            return Promise.reject(err);\r\n        });        \r\n    }\r\n\r\n    token() {\r\n        return axios.get(`${this.friendo_url}token/${this.tokenId}`, {\r\n            headers: {\r\n                \"webtoken\": this.webtoken\r\n            },\r\n            dataType: \"json\"\r\n        })\r\n        .then((res) => {\r\n            this.jwt = res.data.token\r\n            this.info = {\r\n                startDate: res.data.startDate,\r\n                endDate : res.data.endDate,\r\n                status : res.data.projectStatus\r\n            }\r\n           return this.checkPorject();\r\n        })\r\n    }\r\n    get(url, header) {\r\n        return this.token().then(() => {\r\n            return this.baseReq.get(url, header);\r\n        });\r\n    }\r\n\r\n    post(url, data, header) {\r\n        return this.token().then(() => {\r\n            return this.baseReq.post(url, data, header);\r\n        })\r\n    }\r\n\r\n    checkPorject() { \r\n        // \"活動狀態  => 0：活動不存在 1：尚未開始 2：進行中 3：活動結束\"\r\n        switch (this.info.status) {\r\n            case 0:\r\n                return Promise.reject()\r\n            \r\n            case 1:\r\n                return Promise.reject()\r\n            \r\n            case 3:\r\n                alert(\"活動已結束\")\r\n                return Promise.reject();\r\n            \r\n            default:\r\n                return Promise.resolve();\r\n        }\r\n    }\r\n}\r\n"]}